#!/bin/bash

if [ $# -lt 1 ]; then
	echo $0 '<file.img> [qemu arguments]'
	exit 1
fi

if ! which qemu-kvm >/dev/null 2>&1; then
	echo qemu is not installed
	exit 1
fi

if [ -z "$TMPDIR" ]; then
	TMPDIR=/tmp
fi

FILE=$1
shift
WIN=0
FACT=0
RAW=""
if echo "$FILE" | grep -q win; then
	WIN=1
fi
if echo "$FILE" | grep -q fact; then
	FACT=1
fi
if echo "$FILE" | grep -q '\.img$'; then
	RAW=",format=raw"
fi

QEMU_VER=`qemu-kvm --version | sed 's@.*version \([0-9.]*\)[ ,].*@\1@'`
QEMU_MAJOR=${QEMU_VER%%.*}

DRIVE="-drive file=$FILE$RAW"
if [ $QEMU_MAJOR -ge 2 ]; then
	DRIVE="$DRIVE,discard=unmap"
	if [ $WIN = 0 ]; then
		DRIVE="$DRIVE,if=none,id=hd -device virtio-scsi-pci,id=scsi -device scsi-hd,drive=hd"
	fi
fi

MEM=""
if ! echo $@ | grep -q -- '-m '; then
	MEM=`grep 'MemTotal:' /proc/meminfo|sed 's/^.*: *\([0-9]*\) *kB$/\1/'`
	MEM=$(($MEM/5/1024))

	if [ $MEM -lt 100 ]; then
		MEM=100
	fi

	MEM="-m $MEM"
fi

SMP=""
if ! echo $@ | grep -q -- '-smp '; then
	SMP=`grep '^processor' /proc/cpuinfo | tail -1 | sed 's@.* @@'`
	SMP=$(($SMP + 1))
	SMP="-smp $SMP"
fi

SOUND=""
if [ -f /proc/asound/cards ]; then
	if [ $WIN = 1 ]; then
		SOUND='-soundhw ac97'
	else
		SOUND='-soundhw hda'
	fi
fi

N_INSTANCES=`pidof qemu-system-x86_64|wc -w`

QEMU_ARGS="-k en-us $SMP $MEM -usb -device virtio-rng-pci $DRIVE $SOUND"
if [ $WIN = 1 ]; then
	QEMU_ARGS="$QEMU_ARGS -net user,smb=/home/smb,hostfwd=tcp::$((3389+$N_INSTANCES))-:3389 -net nic,model=rtl8139 -localtime"
else
	QEMU_ARGS="$QEMU_ARGS -net user,tftp=/home/xslaby/tftp,bootfile=/pxelinux.0,hostfwd=tcp::$((2222+$N_INSTANCES))-:22,hostfwd=tcp::$((3632+$N_INSTANCES))-:3632 -net nic,model=virtio -serial pty -balloon virtio"
fi
if [ $FACT = 1 ]; then
	QEMU_ARGS="$QEMU_ARGS -device virtio-tablet-pci"
else
	QEMU_ARGS="$QEMU_ARGS -usbdevice tablet"
fi

QEMU_RUN="qemu-kvm $QEMU_ARGS"
echo $QEMU_RUN "$@"

if [ $WIN = 1 ]; then
	exec $QEMU_RUN "$@"
else
	SCR=$TMPDIR/qemu.$RANDOM
	rm -f $SCR >/dev/null 2>&1

	$QEMU_RUN "$@" 2> >(tee $SCR >&2) &
	QEMU=$!

	FAIL=0
	while ! grep -q 'redirected to' $SCR 2>/dev/null; do
		if [ ! -d "/proc/$QEMU" ]; then
			FAIL=1
			break
		fi
		usleep 100000
	done

	if [ $FAIL = 0 ]; then
		TTY=`sed -ne '/redirected to / s@.*redirected to \(/dev[^ ]*\).*@\1@ p' $SCR`
		if [ -c "$TTY" ]; then
			screen "$TTY"
		fi
	fi

	rm -f $SCR

	wait $QEMU
fi
