#!/usr/bin/perl -w
use strict;
use File::Basename qq(basename);
use File::Copy qq(move);

my $tmpdir = $ENV{TMPDIR} || "/tmp";

die "Has to be run from the kernel-source GIT dir" if (! -d ".git");

if ($#ARGV != 1) {
        print "Usage: $0 patch ids_file\n";
        exit 1;
}

open(SERIES, "+<series.conf")|| die "cannot open series.conf";
my $series;
my $series_changed = 0;
{
	local $/;
	$series = <SERIES>;
}

my $patch = $ARGV[0];
my $idsfile = $ARGV[1];
my $destdir = "patches.kernel.org/";
my $dest = $destdir . basename $patch;
mkdir $destdir if (! -d $destdir);

if (-f $patch && ! -f $dest) {
	move $patch, $dest || die "cannot move $patch to $dest";
	print "Moved $patch to $dest\n";
	system("git add $dest");
	print "Added $dest to GIT\n";
	unless ($series =~ s/(latest standard kernel patches(?:\n[^\n]+)+\n)\n/$1\t$dest\n\n/) {
		die "cannot find a place in series.conf to add the patch";
	}
	$series_changed = 1;
}

open IDS, "<$idsfile" || die "cannot open $idsfile";
my $regexp = join "|", map { chomp; $_ } <IDS>;
close IDS;

die "invalid regexp computed" if ($regexp eq "");

open GIT, "git grep -E '$regexp' patches.*|" || die "cannot execute git";

my %files;

while (<GIT>) {
	chomp;
	/^([^:]+):(Git-commit: |Patch-mainline: )?/;
	my $file = $1;
	if (defined $2) {
		system("git rm $file");
		$series =~ s/\t$file\n//;
		$series_changed = 1;
	}
	$files{$file} = 1;
}

close GIT;

if ($series_changed) {
	seek(SERIES, 0, 0) || die "cannot seek series.conf";
	truncate(SERIES, 0) || die "cannot truncate series.conf";
	print SERIES $series;
}
close SERIES;

foreach my $file (keys %files) {
	if (-e $file) {
		system("git grep -E '$regexp' $file");
	}
}

0;
